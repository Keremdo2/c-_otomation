<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>